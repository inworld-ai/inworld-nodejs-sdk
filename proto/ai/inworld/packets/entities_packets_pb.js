// source: ai/inworld/packets/entities_packets.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.entities.CreateOrUpdateItemsOperation', null, global);
goog.exportSymbol('proto.entities.EntityItem', null, global);
goog.exportSymbol('proto.entities.ItemsInEntitiesOperation', null, global);
goog.exportSymbol('proto.entities.ItemsInEntitiesOperation.Type', null, global);
goog.exportSymbol('proto.entities.ItemsOperationEvent', null, global);
goog.exportSymbol('proto.entities.ItemsOperationEvent.OperationCase', null, global);
goog.exportSymbol('proto.entities.RemoveItemsOperation', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.entities.EntityItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.entities.EntityItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.entities.EntityItem.displayName = 'proto.entities.EntityItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.entities.ItemsOperationEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.entities.ItemsOperationEvent.oneofGroups_);
};
goog.inherits(proto.entities.ItemsOperationEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.entities.ItemsOperationEvent.displayName = 'proto.entities.ItemsOperationEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.entities.CreateOrUpdateItemsOperation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.entities.CreateOrUpdateItemsOperation.repeatedFields_, null);
};
goog.inherits(proto.entities.CreateOrUpdateItemsOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.entities.CreateOrUpdateItemsOperation.displayName = 'proto.entities.CreateOrUpdateItemsOperation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.entities.RemoveItemsOperation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.entities.RemoveItemsOperation.repeatedFields_, null);
};
goog.inherits(proto.entities.RemoveItemsOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.entities.RemoveItemsOperation.displayName = 'proto.entities.RemoveItemsOperation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.entities.ItemsInEntitiesOperation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.entities.ItemsInEntitiesOperation.repeatedFields_, null);
};
goog.inherits(proto.entities.ItemsInEntitiesOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.entities.ItemsInEntitiesOperation.displayName = 'proto.entities.ItemsInEntitiesOperation';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.entities.EntityItem.prototype.toObject = function(opt_includeInstance) {
  return proto.entities.EntityItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.entities.EntityItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.entities.EntityItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    displayName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    propertiesMap: (f = msg.getPropertiesMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.entities.EntityItem}
 */
proto.entities.EntityItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.entities.EntityItem;
  return proto.entities.EntityItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.entities.EntityItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.entities.EntityItem}
 */
proto.entities.EntityItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = msg.getPropertiesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.entities.EntityItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.entities.EntityItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.entities.EntityItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.entities.EntityItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPropertiesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.entities.EntityItem.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.entities.EntityItem} returns this
 */
proto.entities.EntityItem.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string display_name = 2;
 * @return {string}
 */
proto.entities.EntityItem.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.entities.EntityItem} returns this
 */
proto.entities.EntityItem.prototype.setDisplayName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.entities.EntityItem.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.entities.EntityItem} returns this
 */
proto.entities.EntityItem.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * map<string, string> properties = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.entities.EntityItem.prototype.getPropertiesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.entities.EntityItem} returns this
 */
proto.entities.EntityItem.prototype.clearPropertiesMap = function() {
  this.getPropertiesMap().clear();
  return this;};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.entities.ItemsOperationEvent.oneofGroups_ = [[1,3,4]];

/**
 * @enum {number}
 */
proto.entities.ItemsOperationEvent.OperationCase = {
  OPERATION_NOT_SET: 0,
  CREATE_OR_UPDATE_ITEMS: 1,
  REMOVE_ITEMS: 3,
  ITEMS_IN_ENTITIES: 4
};

/**
 * @return {proto.entities.ItemsOperationEvent.OperationCase}
 */
proto.entities.ItemsOperationEvent.prototype.getOperationCase = function() {
  return /** @type {proto.entities.ItemsOperationEvent.OperationCase} */(jspb.Message.computeOneofCase(this, proto.entities.ItemsOperationEvent.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.entities.ItemsOperationEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.entities.ItemsOperationEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.entities.ItemsOperationEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.entities.ItemsOperationEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    createOrUpdateItems: (f = msg.getCreateOrUpdateItems()) && proto.entities.CreateOrUpdateItemsOperation.toObject(includeInstance, f),
    removeItems: (f = msg.getRemoveItems()) && proto.entities.RemoveItemsOperation.toObject(includeInstance, f),
    itemsInEntities: (f = msg.getItemsInEntities()) && proto.entities.ItemsInEntitiesOperation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.entities.ItemsOperationEvent}
 */
proto.entities.ItemsOperationEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.entities.ItemsOperationEvent;
  return proto.entities.ItemsOperationEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.entities.ItemsOperationEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.entities.ItemsOperationEvent}
 */
proto.entities.ItemsOperationEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.entities.CreateOrUpdateItemsOperation;
      reader.readMessage(value,proto.entities.CreateOrUpdateItemsOperation.deserializeBinaryFromReader);
      msg.setCreateOrUpdateItems(value);
      break;
    case 3:
      var value = new proto.entities.RemoveItemsOperation;
      reader.readMessage(value,proto.entities.RemoveItemsOperation.deserializeBinaryFromReader);
      msg.setRemoveItems(value);
      break;
    case 4:
      var value = new proto.entities.ItemsInEntitiesOperation;
      reader.readMessage(value,proto.entities.ItemsInEntitiesOperation.deserializeBinaryFromReader);
      msg.setItemsInEntities(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.entities.ItemsOperationEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.entities.ItemsOperationEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.entities.ItemsOperationEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.entities.ItemsOperationEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreateOrUpdateItems();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.entities.CreateOrUpdateItemsOperation.serializeBinaryToWriter
    );
  }
  f = message.getRemoveItems();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.entities.RemoveItemsOperation.serializeBinaryToWriter
    );
  }
  f = message.getItemsInEntities();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.entities.ItemsInEntitiesOperation.serializeBinaryToWriter
    );
  }
};


/**
 * optional CreateOrUpdateItemsOperation create_or_update_items = 1;
 * @return {?proto.entities.CreateOrUpdateItemsOperation}
 */
proto.entities.ItemsOperationEvent.prototype.getCreateOrUpdateItems = function() {
  return /** @type{?proto.entities.CreateOrUpdateItemsOperation} */ (
    jspb.Message.getWrapperField(this, proto.entities.CreateOrUpdateItemsOperation, 1));
};


/**
 * @param {?proto.entities.CreateOrUpdateItemsOperation|undefined} value
 * @return {!proto.entities.ItemsOperationEvent} returns this
*/
proto.entities.ItemsOperationEvent.prototype.setCreateOrUpdateItems = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.entities.ItemsOperationEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.entities.ItemsOperationEvent} returns this
 */
proto.entities.ItemsOperationEvent.prototype.clearCreateOrUpdateItems = function() {
  return this.setCreateOrUpdateItems(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.entities.ItemsOperationEvent.prototype.hasCreateOrUpdateItems = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RemoveItemsOperation remove_items = 3;
 * @return {?proto.entities.RemoveItemsOperation}
 */
proto.entities.ItemsOperationEvent.prototype.getRemoveItems = function() {
  return /** @type{?proto.entities.RemoveItemsOperation} */ (
    jspb.Message.getWrapperField(this, proto.entities.RemoveItemsOperation, 3));
};


/**
 * @param {?proto.entities.RemoveItemsOperation|undefined} value
 * @return {!proto.entities.ItemsOperationEvent} returns this
*/
proto.entities.ItemsOperationEvent.prototype.setRemoveItems = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.entities.ItemsOperationEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.entities.ItemsOperationEvent} returns this
 */
proto.entities.ItemsOperationEvent.prototype.clearRemoveItems = function() {
  return this.setRemoveItems(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.entities.ItemsOperationEvent.prototype.hasRemoveItems = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ItemsInEntitiesOperation items_in_entities = 4;
 * @return {?proto.entities.ItemsInEntitiesOperation}
 */
proto.entities.ItemsOperationEvent.prototype.getItemsInEntities = function() {
  return /** @type{?proto.entities.ItemsInEntitiesOperation} */ (
    jspb.Message.getWrapperField(this, proto.entities.ItemsInEntitiesOperation, 4));
};


/**
 * @param {?proto.entities.ItemsInEntitiesOperation|undefined} value
 * @return {!proto.entities.ItemsOperationEvent} returns this
*/
proto.entities.ItemsOperationEvent.prototype.setItemsInEntities = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.entities.ItemsOperationEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.entities.ItemsOperationEvent} returns this
 */
proto.entities.ItemsOperationEvent.prototype.clearItemsInEntities = function() {
  return this.setItemsInEntities(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.entities.ItemsOperationEvent.prototype.hasItemsInEntities = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.entities.CreateOrUpdateItemsOperation.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.entities.CreateOrUpdateItemsOperation.prototype.toObject = function(opt_includeInstance) {
  return proto.entities.CreateOrUpdateItemsOperation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.entities.CreateOrUpdateItemsOperation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.entities.CreateOrUpdateItemsOperation.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.entities.EntityItem.toObject, includeInstance),
    addToEntitiesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.entities.CreateOrUpdateItemsOperation}
 */
proto.entities.CreateOrUpdateItemsOperation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.entities.CreateOrUpdateItemsOperation;
  return proto.entities.CreateOrUpdateItemsOperation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.entities.CreateOrUpdateItemsOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.entities.CreateOrUpdateItemsOperation}
 */
proto.entities.CreateOrUpdateItemsOperation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.entities.EntityItem;
      reader.readMessage(value,proto.entities.EntityItem.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addAddToEntities(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.entities.CreateOrUpdateItemsOperation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.entities.CreateOrUpdateItemsOperation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.entities.CreateOrUpdateItemsOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.entities.CreateOrUpdateItemsOperation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.entities.EntityItem.serializeBinaryToWriter
    );
  }
  f = message.getAddToEntitiesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated EntityItem items = 1;
 * @return {!Array<!proto.entities.EntityItem>}
 */
proto.entities.CreateOrUpdateItemsOperation.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.entities.EntityItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.entities.EntityItem, 1));
};


/**
 * @param {!Array<!proto.entities.EntityItem>} value
 * @return {!proto.entities.CreateOrUpdateItemsOperation} returns this
*/
proto.entities.CreateOrUpdateItemsOperation.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.entities.EntityItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.entities.EntityItem}
 */
proto.entities.CreateOrUpdateItemsOperation.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.entities.EntityItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.entities.CreateOrUpdateItemsOperation} returns this
 */
proto.entities.CreateOrUpdateItemsOperation.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};


/**
 * repeated string add_to_entities = 2;
 * @return {!Array<string>}
 */
proto.entities.CreateOrUpdateItemsOperation.prototype.getAddToEntitiesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.entities.CreateOrUpdateItemsOperation} returns this
 */
proto.entities.CreateOrUpdateItemsOperation.prototype.setAddToEntitiesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.entities.CreateOrUpdateItemsOperation} returns this
 */
proto.entities.CreateOrUpdateItemsOperation.prototype.addAddToEntities = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.entities.CreateOrUpdateItemsOperation} returns this
 */
proto.entities.CreateOrUpdateItemsOperation.prototype.clearAddToEntitiesList = function() {
  return this.setAddToEntitiesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.entities.RemoveItemsOperation.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.entities.RemoveItemsOperation.prototype.toObject = function(opt_includeInstance) {
  return proto.entities.RemoveItemsOperation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.entities.RemoveItemsOperation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.entities.RemoveItemsOperation.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.entities.RemoveItemsOperation}
 */
proto.entities.RemoveItemsOperation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.entities.RemoveItemsOperation;
  return proto.entities.RemoveItemsOperation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.entities.RemoveItemsOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.entities.RemoveItemsOperation}
 */
proto.entities.RemoveItemsOperation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addItemIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.entities.RemoveItemsOperation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.entities.RemoveItemsOperation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.entities.RemoveItemsOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.entities.RemoveItemsOperation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string item_ids = 1;
 * @return {!Array<string>}
 */
proto.entities.RemoveItemsOperation.prototype.getItemIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.entities.RemoveItemsOperation} returns this
 */
proto.entities.RemoveItemsOperation.prototype.setItemIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.entities.RemoveItemsOperation} returns this
 */
proto.entities.RemoveItemsOperation.prototype.addItemIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.entities.RemoveItemsOperation} returns this
 */
proto.entities.RemoveItemsOperation.prototype.clearItemIdsList = function() {
  return this.setItemIdsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.entities.ItemsInEntitiesOperation.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.entities.ItemsInEntitiesOperation.prototype.toObject = function(opt_includeInstance) {
  return proto.entities.ItemsInEntitiesOperation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.entities.ItemsInEntitiesOperation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.entities.ItemsInEntitiesOperation.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    itemIdsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    entityNamesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.entities.ItemsInEntitiesOperation}
 */
proto.entities.ItemsInEntitiesOperation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.entities.ItemsInEntitiesOperation;
  return proto.entities.ItemsInEntitiesOperation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.entities.ItemsInEntitiesOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.entities.ItemsInEntitiesOperation}
 */
proto.entities.ItemsInEntitiesOperation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.entities.ItemsInEntitiesOperation.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addItemIds(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addEntityNames(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.entities.ItemsInEntitiesOperation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.entities.ItemsInEntitiesOperation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.entities.ItemsInEntitiesOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.entities.ItemsInEntitiesOperation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getItemIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getEntityNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.entities.ItemsInEntitiesOperation.Type = {
  UNSPECIFIED: 0,
  ADD: 1,
  REMOVE: 2,
  REPLACE: 3
};

/**
 * optional Type type = 1;
 * @return {!proto.entities.ItemsInEntitiesOperation.Type}
 */
proto.entities.ItemsInEntitiesOperation.prototype.getType = function() {
  return /** @type {!proto.entities.ItemsInEntitiesOperation.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.entities.ItemsInEntitiesOperation.Type} value
 * @return {!proto.entities.ItemsInEntitiesOperation} returns this
 */
proto.entities.ItemsInEntitiesOperation.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * repeated string item_ids = 2;
 * @return {!Array<string>}
 */
proto.entities.ItemsInEntitiesOperation.prototype.getItemIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.entities.ItemsInEntitiesOperation} returns this
 */
proto.entities.ItemsInEntitiesOperation.prototype.setItemIdsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.entities.ItemsInEntitiesOperation} returns this
 */
proto.entities.ItemsInEntitiesOperation.prototype.addItemIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.entities.ItemsInEntitiesOperation} returns this
 */
proto.entities.ItemsInEntitiesOperation.prototype.clearItemIdsList = function() {
  return this.setItemIdsList([]);
};


/**
 * repeated string entity_names = 3;
 * @return {!Array<string>}
 */
proto.entities.ItemsInEntitiesOperation.prototype.getEntityNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.entities.ItemsInEntitiesOperation} returns this
 */
proto.entities.ItemsInEntitiesOperation.prototype.setEntityNamesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.entities.ItemsInEntitiesOperation} returns this
 */
proto.entities.ItemsInEntitiesOperation.prototype.addEntityNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.entities.ItemsInEntitiesOperation} returns this
 */
proto.entities.ItemsInEntitiesOperation.prototype.clearEntityNamesList = function() {
  return this.setEntityNamesList([]);
};


goog.object.extend(exports, proto.entities);
