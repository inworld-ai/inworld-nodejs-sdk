name: Release & Publish to NPM

on:
  workflow_dispatch:
    inputs:
      increment:
        type: choice
        description: Select increment
        options:
        - patch
        - minor
        - major
        - beta

      beta_version:
        type: string
        description: Type version if beta increment is selected

jobs:
  github-release:
    runs-on: ubuntu-latest
    steps:
      - name: Set version
        run: echo "VERSION=${{ inputs.increment}}" >> $GITHUB_ENV
      - name: Set beta version
        run: echo "VERSION=${{ inputs.beta_version }}" >> $GITHUB_ENV
        if: inputs.beta_version != ''
      - name: Set ref
        run: echo "REF=main" >> $GITHUB_ENV
        if: inputs.beta_version == ''
      - name: Set config
        run: echo "CONFIG=-c .release-it.prerelease.json" >> $GITHUB_ENV
        if: inputs.beta_version != ''
      - name: Echo version
        run: echo "${{ env.VERSION }}"
      - name: Set git user
        run: git config --global user.email "github-service-account@inworld.ai" &&  git config --global user.name "CI-inworld"
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          ref: ${{ env.REF }}
          ssh-key: ${{ secrets.GH_SERVICE_ACCOUNT_SSH_KEY }}
      - name: Run build
        uses: ./.github/actions/build_package
      - name: Bump version
        run: |
          yarn release:bump ${{ env.VERSION }} -c ${{ env.CONFIG }} --ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  npm-release:
    runs-on: ubuntu-latest
    needs: [github-release]
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          ref: ${{ env.REF }}
      - name: Pull latest changes
        run: git pull
      - name: Run build
        uses: ./.github/actions/build_package
      - name: Set Tag
        run: echo "TAG=--tag=beta" >> $GITHUB_ENV
        if: inputs.beta_version != ''
      - run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
      - name: Publish to npm
        run: yarn release:publish ${{ env.TAG }}

  release-notification:
    runs-on: [self-hosted, kubernetes, nodocker]
    needs: [github-release, npm-release]
    # always runs even if previous tasks are not successful
    if: always()
    steps:
      - name: Checkout source code
        if: needs.npm-release.result == 'success'
        uses: actions/checkout@v3
        with:
          ref: main
      - name: Extract version
        if: needs.npm-release.result == 'success'
        run: |
          echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
        id: extract-version
      - name: Extract release notes
        if: needs.npm-release.result == 'success'
        id: extract-release-notes
        uses: ffurrer2/extract-release-notes@v1
      - name: Slack Notification
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.INTEGRATIONS_SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ contains(needs.*.result, 'failure') && 'danger' || 'good' }}
          SLACK_TITLE: Release ${{ contains(needs.*.result, 'failure') && 'failure' || steps.extract-version.outputs.version }}
          SLACK_MESSAGE: ${{ contains(needs.*.result, 'failure') && ':x:' || steps.extract-release-notes.outputs.release_notes }}
          SLACK_FOOTER: '-Node.js SDK-'
